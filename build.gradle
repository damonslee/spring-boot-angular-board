buildscript {
	ext.kotlin_version = '1.2.41'
	ext {
		springBootVersion = '2.0.1.RELEASE'

	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tram'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

def staticDir = "$projectDir/src/main/webapp"

sourceSets {
	main.kotlin.srcDirs += 'src/main/java'
	main.java.srcDirs += 'src/main/java'
	main.resources.srcDirs = ["$staticDir/dist", "$projectDir/src/main/resources"]
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile "org.jetbrains.kotlin:kotlin-reflect"
	testCompile "org.jetbrains.kotlin:kotlin-test"
	testCompile "org.jetbrains.kotlin:kotlin-test-junit"
	compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile 'com.auth0:java-jwt:3.3.0'
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.springframework.security:spring-security-test")
}

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	// installAngular should be run prior to this task
	dependsOn "installAngular"
	workingDir "$staticDir"
	inputs.dir "$staticDir"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}

task installAngular(type:Exec) {
	workingDir "$staticDir"
	inputs.dir "$staticDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}